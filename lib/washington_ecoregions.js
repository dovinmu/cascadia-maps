// Generated by CoffeeScript 1.10.0
(function() {
  var changeText, getClassName, height, initMap, loadJson, onClick, path, processTree, projection, region_trees, removeImages, selected, selectedText, selectedTextDetail, showImage, sizes, svg, width;

  width = 1350;

  height = 1160;

  selected = null;

  region_trees = {};

  sizes = {
    x: 90,
    y: 180,
    padding: 10
  };

  svg = d3.select('body').append('svg').attr('width', width).attr('height', height);

  svg.append('text').attr('x', width / 6).attr('y', 50.).attr('class', 'mapname').text('Washington state ecoregions');

  projection = d3.geo.mercator().scale(7500).center([-121.5, 46.5]).translate([width / 3, height / 2]);

  path = d3.geo.path().projection(projection);

  getClassName = function(d) {
    var l1, l4;
    l4 = d.id.split(' ').slice(2);
    l1 = d.properties.L1.split(' ').slice(2);
    return 'subunit ' + l1.join('_') + ' ' + l4.join('_').replace('/', '_');
  };

  showImage = function(name, i) {
    var fname, x, y;
    fname = name.toLowerCase().replace(/ /g, '_') + ".jpg";
    y = 100 + (Math.floor(i / 3)) * (sizes.y + sizes.padding);
    if (i % 3 === 0) {
      x = width - 3 * (sizes.x + sizes.padding);
    }
    if (i % 3 === 1) {
      x = width - 2 * (sizes.x + sizes.padding);
    }
    if (i % 3 === 2) {
      x = width - 1 * (sizes.x + sizes.padding);
    }
    return svg.append("svg:image").attr("xlink:href", "images/" + fname).attr("x", x).attr("y", y).attr("width", sizes.x).attr("height", sizes.y);
  };

  removeImages = function() {
    return svg.selectAll("image").remove();
  };

  onClick = function(d, i) {
    var j, len, results, tree, tree_list, yOffset;
    if (selected) {
      selected.style('stroke', 'none');
    }
    removeImages();
    selected = d3.select(this);
    selected.style('stroke', 'red');
    tree_list = region_trees[d.id];
    changeText(d.id.split(' ').slice(2).join(' '), tree_list.join(', '));
    yOffset = 0;
    results = [];
    for (i = j = 0, len = tree_list.length; j < len; i = ++j) {
      tree = tree_list[i];
      results.push(showImage(tree, i));
    }
    return results;
  };

  processTree = function(tree) {
    var j, len, ref, region, results;
    console.log("~~~" + tree["common"] + "~~~");
    ref = tree["regions"];
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      region = ref[j];
      results.push(region_trees[region].push(tree["common"]));
    }
    return results;
  };

  loadJson = function(fname) {
    console.log("loading", fname);
    return fetch(fname, {
      method: 'get'
    }).then(function(response) {
      return response.json();
    }).then(function(json) {
      var j, len, ref, results, tree;
      ref = json["trees"];
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        tree = ref[j];
        results.push(processTree(tree));
      }
      return results;
    }).then(function() {
      return console.log(region_trees);
    })["catch"](function(e) {
      return console.log("FLAGRANT ERROR:", e);
    });
  };

  initMap = function(error, ecotopo) {
    var data, j, len, ref;
    if (error) {
      return console.log(error);
    }
    data = topojson.feature(ecotopo, ecotopo.objects.ecoregions);
    svg.selectAll('.subunit').data(data.features).enter().append('path').attr('class', getClassName).on('click', onClick).attr('d', path);
    svg.append("text").attr("x", width / 3).attr("y", height / 7).attr("class", "label").text("Northwestern Forested Mountains");
    svg.append("text").attr("x", width / 2.3).attr("y", height / 2).attr("class", "label").text("North American Deserts");
    svg.append("text").attr("x", width / 10).attr("y", height / 3).attr("class", "label").text("Marine West Coast Forest");
    ref = data.features;
    for (j = 0, len = ref.length; j < len; j++) {
      path = ref[j];
      region_trees[path.id] = [];
    }
    return loadJson('trees_wa.json');
  };

  selectedText = svg.append('text').attr('x', width / 6 + 8).attr('y', 70.).attr('class', 'selected title').text('');

  selectedTextDetail = svg.append('text').attr('x', width / 6 + 8).attr('y', 85.).attr('class', 'selected detail').text('');

  changeText = function(text, textDetail) {
    selectedText.transition().duration(100).style('opacity', 0).transition().duration(350).style('opacity', 1).text(text);
    if (!textDetail) {
      textDetail = '';
    }
    return selectedTextDetail.transition().duration(100).style('opacity', 0).transition().duration(350).style('opacity', 1).text(textDetail);
  };

  d3.json("washington.topojson", initMap);

  changeText('', 'Click on an ecological subregion to see its name.');

}).call(this);
