// Generated by CoffeeScript 1.10.0
(function() {
  var changeText, drawDot, drawSHP, getClassName, height, initMap, onClick, onSubmit, path, projection, selected, selectedText, selectedTextDetail, submitText, svg, treename, width;

  width = 1160;

  height = 1160;

  treename = "abieamab";

  Array.prototype.unique = function() {
    var j, key, output, ref, results, value;
    output = {};
    for (key = j = 0, ref = this.length; 0 <= ref ? j < ref : j > ref; key = 0 <= ref ? ++j : --j) {
      output[this[key]] = this[key];
    }
    results = [];
    for (key in output) {
      value = output[key];
      results.push(value);
    }
    return results;
  };

  svg = d3.select('body').append('svg').attr('width', width).attr('height', height);

  svg.append('text').attr('x', width / 4).attr('y', height / 10).attr('class', 'mapname').text(treename);

  projection = d3.geo.mercator().scale(7500).center([-122, 47]).translate([width / 3, height / 2]);

  path = d3.geo.path().projection(projection);

  getClassName = function(d) {
    var l1, l4;
    l4 = d.id.split(' ').slice(2);
    l1 = d.properties.L1.split(' ').slice(2);
    return 'subunit ' + l1.join('_') + ' ' + l4.join('_').replace('/', '_');
  };

  selected = null;

  onClick = function(d, i) {
    var fill, region_class, tree_class, tree_id;
    selected = d3.select(this);
    tree_id = selected.attr('id');
    tree_class = selected.attr('class');
    console.log("select all: ", tree_class);
    if (tree_id) {
      region_class = tree_class.split(' ')[1];
      tree_class = '.' + tree_class.split(' ')[2];
      fill = '#000';
      if (region_class === "") {
        fill = '#333';
      } else if (region_class === "") {
        fill = '#666';
      } else if (region_class === "") {
        fill = '#999';
      }
      d3.selectAll(tree_class).style('fill', fill).attr('id', null);
    } else {
      tree_class = '.' + tree_class.split(' ')[2];
      d3.selectAll(tree_class).style('fill', 'red').attr('id', 'in-map');
    }
    return changeText(d.id);
  };

  onSubmit = function(d, i) {
    var treemap;
    console.log("selecting reds");
    treemap = [];
    selected = d3.selectAll("#in-map").each(function(d) {
      return treemap.push('"' + d.id + '",' + "\n");
    });
    return console.log(treemap.unique().join('\n'));
  };

  selectedText = svg.append('text').attr('x', width / 4 + 8).attr('y', height / 8 + 5).attr('class', 'selected title').text('');

  selectedTextDetail = svg.append('text').attr('x', width / 4 + 8).attr('y', height / 8 + 20).attr('class', 'selected detail').text('');

  submitText = svg.append('text').attr('x', width - 100).attr('y', height / 8 + 5).attr('class', 'submit').text('Submit').on('click', onSubmit);

  initMap = function(error, ecotopo) {
    var data, feature_string;
    if (error) {
      return console.log(error);
    }
    data = topojson.feature(ecotopo, ecotopo.objects.ecoregions);
    feature_string = "";
    return svg.selectAll('.subunit').data(data.features).enter().append('path').attr('class', getClassName).on('click', onClick).attr('d', path);
  };

  changeText = function(text, textDetail) {
    selectedText.transition().duration(100).style('opacity', 0).transition().duration(350).style('opacity', 1).text(text);
    if (!textDetail) {
      textDetail = '';
    }
    return selectedTextDetail.transition().duration(100).style('opacity', 0).transition().duration(350).style('opacity', 1).text(textDetail);
  };

  d3.json("washington.topojson", initMap);

  drawDot = function(x, y) {
    var coordinates;
    coordinates = projection([x, y]);
    return svg.append('circle').attr('cx', coordinates[0]).attr('cy', coordinates[1]).attr('r', 2).style('fill', 'purple');
  };

  drawSHP = function(shp, source) {
    var coords, j, len, ref;
    if (!shp.done) {
      ref = shp.value.geometry.coordinates[0];
      for (j = 0, len = ref.length; j < len; j++) {
        coords = ref[j];
        drawDot(coords[0], coords[1]);
      }
      svg.selectAll('.trees').data(shp.value.geometry).enter().append('path').style('fill', 'green').attr('d', path);
      return source.read().then(function(shp) {
        return drawSHP(shp, source);
      });
    }
  };

  shapefile.open("tree_range/" + treename + ".shp", null).then(function(source) {
    return source.read().then(function(shp) {
      return drawSHP(shp, source);
    });
  })["catch"](function(error) {
    console.log("aww heck");
    return console.log(error);
  });

  changeText('', 'Click on an ecological subregion to see its name.');

}).call(this);
